### Analiza danych z pakietem Pandas

W ramach swojej pracy magisterskiej analizowałem dane na temat przestępczości w&nbsp;Chicago. Miasto to publikuje dane na
temat wszystkich zarejestrowanych przestępstw od 2001 roku, aż do&nbsp;teraz (regularnie zbiory te są uzupełniane o nowe
dane). Nie jest to zresztą szczególny przypadek — wiele dużych miast publikuje szczegółowe dane na temat zarejestrowanej
przestępczości. Dzięki temu naukowcy oraz osoby indywidualne mogą przyczynić się do&nbsp;walki z przestępczością. My jednak
wykorzystamy te dane, by nauczyć się czegoś ciekawego.

Dane pobierzesz z portalu *Chicago Data Portal* używając poniższego linka. Jest to duży plik: w&nbsp;czasie pisania tej
książki ma on ponad 7 milionów zarejestrowanych zdarzeń i&nbsp;waży 1.77 GB. Nie jest to najprostszy plik do&nbsp;analizy, ale
przy pracy nad nim zobaczymy, jak praca analityków danych naprawdę wygląda.

[https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-Present/ijzp-q8t2/data](https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-Present/ijzp-q8t2/data)

> Ponieważ jest to ogromny zbiór danych, oczekiwanie na wyniki może trochę trwać.

![](401_crime_data.png)

Plik zawiera wiele informacji na temat każdego przestępstwa. Nie zawiera oczywiście żadnych danych personalnych, ani
dotyczących płci czy koloru skóry. Zawiera jednak dokładną datę i&nbsp;godzinę, lokalizację (zarówno adres, jak i&nbsp;współrzędne
geograficzne), typ przestępstwa, informację czy doszło do&nbsp;aresztowania i&nbsp;czy było to przestępstwo domowe.

Dane analizować będziemy przy użyciu pakietu Pandas. Ponieważ pobraliśmy je w&nbsp;formacie CSV, użyjemy
funkcji&nbsp;`read_csv`, dzięki czemu otrzymamy obiekt zwany DataFrame, który pozwoli nam analizować dane.

```python
from pandas import read_csv

crimes_df = read_csv("Crimes_-_2001_to_Present.csv")
```

Ponieważ ten zbiór danych jest ogromny, zacznijmy od przetworzenia go do&nbsp;bardziej interesującego nas formatu. Zacznę od
ograniczenia się do&nbsp;interesujących mnie kolumn. Zostawię datę, typ przestępstwa i&nbsp;informację o aresztowaniu. Pozostałe
dane nie będą nam potrzebne, choć dla innych mogą być bardzo przydatne[^401_2].

```python
crimes_df = crimes_df[['Date', 'Primary Type', 'Arrest']]
```

Datę rozbiję na osobne atrybuty "day", "month", "year" i&nbsp;"hour", odrzucę kolumnę "Date". Na koniec zapiszę tak przetworzone
dane do&nbsp;osobnego pliku. Gdy je odczytamy, operować będziemy już na znacznie mniejszym zbiorze danych, a&nbsp;dzięki temy
nasze przetwarzanie będzie szybsze.

```python
from dateutil.parser import parse

dates = crimes_df["Date"].map(lambda x: parse(x))
crimes_df = crimes_df.drop(columns=["Date"])

crimes_df["day"] = dates.map(lambda x: x.day)
crimes_df["month"] = dates.map(lambda x: x.month)
crimes_df["year"] = dates.map(lambda x: x.year)
crimes_df["hour"] = dates.map(lambda x: x.hour)
crimes_df["date"] = dates.map(lambda x: x.strftime("%d.%m.%Y"))

# Możesz ograniczyć dane
# crimes_df = crimes_df[crimes_df["year"] >= 2010]
# crimes_df = crimes_df[crimes_df["year"] < 2020]

crimes_df.to_csv("Crimes.csv")
```

> Możesz pominąć te kroki i&nbsp;bezpośrednio pobrać przetworzone dane od 1.1.2001 do&nbsp;26.1.2021 ze strony []().

Udało nam się ograniczyć rozmiar naszych danych do&nbsp;XXX. Odczytajmy je funkcją&nbsp;`read_csv`. Od tego momentu już na nich
będziemy operować:

```python
from pandas import read_csv

crimes_df = read_csv("Crimes.csv")
```

Najistotniejszą częścią pracy analityka jest stawianie sobie pytań i&nbsp;poszukiwanie na nie odpowiedzi. Teraz będziemy
eksplorować dane, czyli będziemy zadawać sobie różne pytania, by czegoś się na ich temat dowiedzieć. Zacznijmy od
prostego pytania: Jaki procent z tych przestęstw kończył się aresztowaniem? Mamy kolumnę "Arrest", wystarczy policzyć
jej wartości.

```python
crimes_df["Arrest"].value_counts()
# False    5290885
# True     1971870
```

Dostaliśmy dokładne wartości, ale nie procenty. Do tego potrzebujemy podzielić wynik przez liczbę przestępstw.

```python
crimes_df["Arrest"].value_counts() / len(crimes_df)
# False    0.728496
# True     0.271504
```

Wygląda na to, że tylko 27% przestępstw kończy się aresztowaniem. Nie odpowiada to na pytanie

Zacznijmy może od tego, jakiego typu przestępstwa są w&nbsp;naszym zbiorze. Pomocna będzie funkcja&nbsp;`value_counts`, która
liczy wystąpienia każdej z wartości w&nbsp;kolumnie.

```python
crimes_df["Primary Type"].value_counts()
# THEFT                                671555
# BATTERY                              536239
# CRIMINAL DAMAGE                      315732
# NARCOTICS                            258317
# ASSAULT                              192839
# OTHER OFFENSE                        180839
# BURGLARY                             170209
# DECEPTIVE PRACTICE                   162582
# MOTOR VEHICLE THEFT                  129095
# ROBBERY                              114512
# ... (lista skrócona do&nbsp;10 najpopularniejszych kategorii)
```

Nie jesteśmy jednak stworzeni do&nbsp;oglądania liczb. Więcej mówią nam wykresy. Aby narysować wykres liczby przestępstw,
potrzebujemy zainstalować pakiet&nbsp;`matplotlib`. Przy jego użyciu następująco możemy narysować wykres liczby przestępstw
wg głównego typu.

```python
import matplotlib.pyplot as plt

crimes_df["Primary Type"]
.value_counts()
.sort_values()
.plot(kind='barh')

plt.show(block=True)
plt.interactive(False)
```

![](401_type_plot.png)

Ciekawa na tej naszym wykresie jest wysoka pozycja przestępstw związanych z narkotykami. W końcu na przestrzeni
ostatnich lat postępowała dekryminalizacja wielu substancji wcześniej uważanych za narkotyki. Ciekawie byłoby więc
zobaczyć, jak liczba takich przestępstw zmienia się w&nbsp;czasie. Wcześniej możemy jednak sprawdzić jak liczba wszystkich
przestępst zmienia się rok po&nbsp;roku.

```python
# Jako że dane kończą się w styczniu 2021, 
# suma przestępstw z roku 2021 nie jest miarodajna
crimes_df = crimes_df[crimes_df["year"] < 2021]

# Wyświetlenie liczby przestęsptw wg. roku
print(crimes_df["year"].value_counts())

# Wyświetlenie wykresu
crimes_df.groupby('year').count().plot()
plt.show(block=True)
plt.interactive(False)
```

![](401_crimes_per_year.png)

Co ciekawe, liczba przestępstw systematycznie spada. Spadła aż dwukrotnie na przestrzeni tych 20 lat. O ile może się to
wydawać nieintuicyjne, systematyczny spadek liczby przestępstw zaobserwowałem także dla danych z innych miast. Czy
spadek ten zależy jednak od typu przestępstwa?

[^401_1]: W dużych sieciach, podobnie jak w&nbsp;wielu firmach technologicznych, prowadzi się tzw. testy A/B, czyli w&nbsp;części
miejsc wprowadza się pewne niewielkie zmiany, a&nbsp;następnie obserwuje się, jak wpłynęły one na zachowania klientów. Jeśli
na przykład po&nbsp;zmianie ziaren (w&nbsp;losowych miejscach) liczba sprzedanych kaw (istotnie statystycznie) wzrosła, to zmianę
można uznać za pozytywną i&nbsp;wprowadzić ją w&nbsp;reszcie miejsc.  
[^401_2]: W mojej pracy na rzykład jedną z ważniejszych danych była wysokość i&nbsp;szerokość geograficzna, którą na
podstawie OpenStreetMap połączyłem z bliskością różnych punktów (barów, parków itp.) i&nbsp;na tej podstawie dokonywałem
predykcji przestępczości.
